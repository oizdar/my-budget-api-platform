parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    MyBudget\Budget\:
        resource: '../../src/Budget/'
        exclude:
            - '../../src/Budget/Domain/Enum/'
            - '../../src/Budget/Domain/Model/'
            - '../../src/Budget/Domain/Exceptions/'
            - '../../src/Budget/Infrastructure/Mapping/'

        # add more service definitions when explicit configuration is needed
        # please note that last definitions always *replace* previous ones


    #
    #    BudgetCollectionProvider:
    #        class: MyBudget\Infrastructure\BudgetCollectionProvider
    #        tags:
    #            - { name: 'my_budget.budget_provider', }
    #        
    #    'MyBudget\Budget\Infrastructure\Repository\InMemoryBudgetRepository':
    #        public: true
    #    


    MyBudget\Budget\Domain\Repository\BudgetRepositoryInterface:
        alias: MyBudget\Budget\Infrastructure\Repository\DoctrineBudgetRepository

when@test:
    MyBudget\Budget\Domain\Repository\BudgetRepositoryInterface:
        alias: MyBudget\Budget\Infrastructure\Repository\DoctrineBudgetRepository
            
